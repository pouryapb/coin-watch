{"version":3,"sources":["API/coinGecko.js","context/CoinListContext.jsx","pages/CoinList.jsx","components/MarketDetails.jsx","components/ChartComponent.jsx","API/predictor.js","components/Predictor.jsx","pages/Details.jsx","components/CustomAppBar.jsx","App.jsx","index.jsx"],"names":["axios","create","baseURL","CoinListContext","React","createContext","CoinListProvider","children","useState","window","localStorage","getItem","currency","setCurrency","isLoading","setIsLoading","list","setList","page","setPage","perPage","setPerPage","activeCryptos","setActiveCryptos","allCoins","setAllCoins","useEffect","a","currencyFormatter","Intl","NumberFormat","style","maximumFractionDigits","percentFormatter","undefined","coinGecko","get","params","include_platform","allCoin","actives","data","length","vs_currency","order","per_page","price_change_percentage","currentPage","markets","map","item","id","rank","market_cap_rank","image","name","price","format","current_price","priceChange","price_change_percentage_24h","marketCap","market_cap","volume","total_volume","fetchData","Provider","value","setItem","search","prefix","filter","toLowerCase","startsWith","WatchList","useContext","history","useHistory","Container","Card","CardContent","TableContainer","Table","size","TableHead","TableRow","TableCell","sortDirection","TableBody","listItem","hover","cursor","onClick","event","push","Avatar","src","display","color","slice","green","red","ArrowDropUp","ArrowDropDown","TableFooter","TablePagination","rowsPerPageOptions","count","rowsPerPage","onChangePage","newPage","onChangeRowsPerPage","target","LinearProgress","MarketDetails","marketData","coinFormatter","isSmallScreen","useMediaQuery","theme","breakpoints","down","content","market_data","percent","market_cap_change_percentage_24h","ath","ath_change_percentage","atl","atl_change_percentage","circulating_supply","symbol","toUpperCase","fully_diluted_valuation","Fragment","row","index","Grid","container","direction","justify","spacing","md","xs","Typography","variant","Divider","useStyle","makeStyles","chartChangeBtnChecked","palette","info","light","daysSelected","background","daysBtn","paddingLeft","paddingRight","minWidth","ChartComponent","coin","dataSource","setDataSource","line","setLine","setDaysSelected","useTheme","classes","days","indexOf","mappedData","date","Date","o","h","l","c","changeDays","res","i","alignItems","small","IconButton","disableRipple","className","ShowChart","type","title","show","argumentField","openValueField","highValueField","lowValueField","closeValueField","valueField","position","precision","enabled","location","customizeTooltip","arg","html","originalArgument","toLocaleString","dateStyle","timeStyle","hourCycle","openValue","closeValue","highValue","lowValue","visible","argumentAxis","Button","bind","StyledLinearProgress","withStyles","root","height","borderRadius","colorPrimary","backgroundColor","error","main","bar","success","Predictor","m","setM","setH","mode","setMode","predictor","then","result","Skeleton","textAlign","marginBottom","nextPrediction","up","rightGuess","allGuess","alignSelf","ToggleButtonGroup","exclusive","onChange","newMode","width","marginTop","ToggleButton","Tooltip","Details","match","setMarketData","coinId","localization","tickers","community_data","developer_data","sparkline","market","justifyItems","useStyles","shape","fade","common","white","marginRight","marginLeft","searchIcon","padding","pointerEvents","justifyContent","inputRoot","inputInput","transition","transitions","CustomAppBar","themeType","setThemeType","searchResults","setSearchResults","openResult","setOpenResult","searchBoxValue","setSearchBoxValue","currencyList","setCurrencyList","AppBar","Toolbar","flexGrow","Search","InputBase","placeholder","input","inputProps","results","Paper","elevation","List","ListItem","fontSize","noWrap","FormControl","Select","selectEmpty","capsValue","MenuItem","Brightness4","BrightnessHigh","App","createMuiTheme","ThemeProvider","CssBaseline","exact","path","component","CoinList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.280a1701.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://api.coingecko.com/api/v3\",\r\n});\r\n","import React, { useEffect, useState } from \"react\";\r\nimport coinGecko from \"../API/coinGecko\";\r\n\r\nexport const CoinListContext = React.createContext(null);\r\n\r\nconst createData = (\r\n  id,\r\n  rank,\r\n  image,\r\n  name,\r\n  price,\r\n  priceChange,\r\n  marketCap,\r\n  volume\r\n) => {\r\n  return {\r\n    id,\r\n    rank,\r\n    image,\r\n    name,\r\n    price,\r\n    priceChange,\r\n    marketCap,\r\n    volume,\r\n  };\r\n};\r\n\r\nconst CoinListProvider = ({ children }) => {\r\n  const [currency, setCurrency] = useState(\r\n    window.localStorage.getItem(\"currency\") || \"usd\"\r\n  );\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [list, setList] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [perPage, setPerPage] = useState(10);\r\n  const [activeCryptos, setActiveCryptos] = useState(0);\r\n  const [allCoins, setAllCoins] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setIsLoading(true);\r\n\r\n      const currencyFormatter = new Intl.NumberFormat(\"en-US\", {\r\n        style: \"currency\",\r\n        currency: currency,\r\n        maximumFractionDigits: 6,\r\n      });\r\n      const percentFormatter = new Intl.NumberFormat(undefined, {\r\n        maximumFractionDigits: 2,\r\n        style: \"percent\",\r\n      });\r\n\r\n      if (activeCryptos === 0) {\r\n        const allCoin = await coinGecko.get(\"/coins/list\", {\r\n          params: {\r\n            include_platform: false,\r\n          },\r\n        });\r\n        const actives = allCoin.data.length;\r\n        setActiveCryptos(actives);\r\n        setAllCoins(allCoin.data);\r\n      }\r\n\r\n      const currentPage = await coinGecko.get(\"/coins/markets\", {\r\n        params: {\r\n          vs_currency: currency,\r\n          order: \"market_cap_desc\",\r\n          per_page: perPage,\r\n          page: page + 1,\r\n          price_change_percentage: \"24h\",\r\n        },\r\n      });\r\n\r\n      const markets = currentPage.data;\r\n\r\n      setList(\r\n        markets.map((item) => {\r\n          return createData(\r\n            item.id,\r\n            item.market_cap_rank,\r\n            item.image,\r\n            item.name,\r\n            currencyFormatter.format(item.current_price),\r\n            percentFormatter.format(item.price_change_percentage_24h / 100),\r\n            currencyFormatter.format(item.market_cap),\r\n            currencyFormatter.format(item.total_volume)\r\n          );\r\n        })\r\n      );\r\n\r\n      setIsLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [currency, page, perPage, activeCryptos]);\r\n\r\n  const search = (prefix) => {\r\n    return allCoins.filter((value) => {\r\n      return (\r\n        value.name.toLowerCase().startsWith(prefix.toLowerCase()) ||\r\n        value.id.toLowerCase().startsWith(prefix.toLowerCase())\r\n      );\r\n    });\r\n  };\r\n\r\n  const currencySetter = (value) => {\r\n    window.localStorage.setItem(\"currency\", value);\r\n    setCurrency(value);\r\n  };\r\n\r\n  return (\r\n    <CoinListContext.Provider\r\n      value={{\r\n        currency,\r\n        isLoading,\r\n        list,\r\n        page,\r\n        perPage,\r\n        activeCryptos,\r\n        setCurrency: currencySetter,\r\n        setPage,\r\n        setPerPage,\r\n        search,\r\n      }}\r\n    >\r\n      {children}\r\n    </CoinListContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CoinListProvider;\r\n","import React, { useContext } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport {\r\n  Avatar,\r\n  Card,\r\n  CardContent,\r\n  Container,\r\n  LinearProgress,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableFooter,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport { ArrowDropUp, ArrowDropDown } from \"@material-ui/icons\";\r\nimport { red, green } from \"@material-ui/core/colors\";\r\n\r\nimport { CoinListContext } from \"../context/CoinListContext\";\r\n\r\nconst WatchList = () => {\r\n  const {\r\n    isLoading,\r\n    list,\r\n    page,\r\n    perPage,\r\n    setPage,\r\n    setPerPage,\r\n    activeCryptos,\r\n  } = useContext(CoinListContext);\r\n\r\n  const history = useHistory();\r\n\r\n  const changePageHandler = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const changeRowPerPageHandler = (event) => {\r\n    setPerPage(event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const redirect = (event, id) => {\r\n    history.push(`/coin-watch/${id}`);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Card>\r\n        <CardContent>\r\n          <TableContainer>\r\n            <Table size=\"small\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell sortDirection=\"asc\">#</TableCell>\r\n                  <TableCell></TableCell>\r\n                  <TableCell>name</TableCell>\r\n                  <TableCell>price</TableCell>\r\n                  <TableCell>24h %</TableCell>\r\n                  <TableCell>market cap</TableCell>\r\n                  <TableCell>volume</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {list.map((listItem) => {\r\n                  return (\r\n                    <TableRow\r\n                      key={listItem.rank}\r\n                      hover\r\n                      style={{\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                      onClick={(event) => redirect(event, listItem.id)}\r\n                    >\r\n                      <TableCell>{listItem.rank}</TableCell>\r\n                      <TableCell>\r\n                        <Avatar src={listItem.image} />\r\n                      </TableCell>\r\n                      <TableCell>{listItem.name}</TableCell>\r\n                      <TableCell>{listItem.price}</TableCell>\r\n                      <TableCell>\r\n                        <span\r\n                          style={{\r\n                            display: \"flex\",\r\n                            color:\r\n                              listItem.priceChange.slice(0, -1) >= 0\r\n                                ? green[400]\r\n                                : red[400],\r\n                          }}\r\n                        >\r\n                          {listItem.priceChange.slice(0, -1) >= 0 ? (\r\n                            <ArrowDropUp />\r\n                          ) : (\r\n                            <ArrowDropDown />\r\n                          )}\r\n                          {listItem.priceChange}\r\n                        </span>\r\n                      </TableCell>\r\n                      <TableCell>{listItem.marketCap}</TableCell>\r\n                      <TableCell>{listItem.volume}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n              <TableFooter>\r\n                <TableRow>\r\n                  <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 50, 100, 250]}\r\n                    count={activeCryptos}\r\n                    rowsPerPage={perPage}\r\n                    page={page}\r\n                    onChangePage={changePageHandler}\r\n                    onChangeRowsPerPage={changeRowPerPageHandler}\r\n                  />\r\n                </TableRow>\r\n              </TableFooter>\r\n            </Table>\r\n          </TableContainer>\r\n          {isLoading && <LinearProgress />}\r\n        </CardContent>\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default WatchList;\r\n","import {\r\n  Divider,\r\n  Grid,\r\n  LinearProgress,\r\n  Typography,\r\n  useMediaQuery,\r\n} from \"@material-ui/core\";\r\nimport { ArrowDropUp, ArrowDropDown } from \"@material-ui/icons\";\r\nimport { red, green } from \"@material-ui/core/colors\";\r\nimport React from \"react\";\r\n\r\nconst MarketDetails = ({ marketData, currency, isLoading }) => {\r\n  const currencyFormatter = new Intl.NumberFormat(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: currency,\r\n    maximumFractionDigits: 6,\r\n  });\r\n  const percentFormatter = new Intl.NumberFormat(undefined, {\r\n    maximumFractionDigits: 2,\r\n    style: \"percent\",\r\n  });\r\n  const coinFormatter = new Intl.NumberFormat();\r\n  const isSmallScreen = useMediaQuery((theme) => theme.breakpoints.down(\"xs\"));\r\n\r\n  const content = [\r\n    [\r\n      {\r\n        name: \"Market Cap\",\r\n        value:\r\n          (!isLoading &&\r\n            currencyFormatter.format(\r\n              marketData.market_data.market_cap[currency]\r\n            )) ||\r\n          \"--\",\r\n        percent:\r\n          (!isLoading &&\r\n            percentFormatter.format(\r\n              marketData.market_data.market_cap_change_percentage_24h / 100\r\n            )) ||\r\n          \"--\",\r\n      },\r\n      {\r\n        name: \"All Time High\",\r\n        value:\r\n          (!isLoading &&\r\n            currencyFormatter.format(marketData.market_data.ath[currency])) ||\r\n          \"--\",\r\n        percent:\r\n          (!isLoading &&\r\n            percentFormatter.format(\r\n              marketData.market_data.ath_change_percentage[currency] / 100\r\n            )) ||\r\n          \"--\",\r\n      },\r\n      {\r\n        name: \"All Time Low\",\r\n        value:\r\n          (!isLoading &&\r\n            currencyFormatter.format(marketData.market_data.atl[currency])) ||\r\n          \"--\",\r\n        percent:\r\n          (!isLoading &&\r\n            percentFormatter.format(\r\n              marketData.market_data.atl_change_percentage[currency] / 100\r\n            )) ||\r\n          \"--\",\r\n      },\r\n      {\r\n        name: \"Volume\",\r\n        value:\r\n          (!isLoading &&\r\n            currencyFormatter.format(\r\n              marketData.market_data.total_volume[currency]\r\n            )) ||\r\n          \"--\",\r\n      },\r\n      {\r\n        name: \"Circulating Supply\",\r\n        value: `${\r\n          !isLoading\r\n            ? coinFormatter.format(marketData.market_data.circulating_supply) +\r\n              \" \"\r\n            : \"-\"\r\n        }${!isLoading ? marketData.symbol.toUpperCase() : \"-\"}`,\r\n      },\r\n      {\r\n        name: \"Fully Diluted Valuation\",\r\n        value:\r\n          (!isLoading &&\r\n            marketData.market_data.fully_diluted_valuation[currency] &&\r\n            !isLoading &&\r\n            currencyFormatter.format(\r\n              marketData.market_data.fully_diluted_valuation[currency]\r\n            )) ||\r\n          \"--\",\r\n      },\r\n    ],\r\n  ];\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {isLoading && <LinearProgress />}\r\n      {content.map((row, index) => {\r\n        return (\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"space-between\"\r\n            key={index}\r\n            spacing={3}\r\n          >\r\n            {row.map((item, index) => {\r\n              return (\r\n                <Grid md={4} xs={12} item key={index}>\r\n                  <Typography variant=\"subtitle2\" display=\"block\">\r\n                    {item.name}\r\n                  </Typography>\r\n                  <Typography variant=\"h6\" display=\"block\">\r\n                    {item.value}\r\n                  </Typography>\r\n                  {item.percent && (\r\n                    <Typography\r\n                      variant=\"caption\"\r\n                      style={{\r\n                        display: \"flex\",\r\n                        color:\r\n                          !isLoading &&\r\n                          (item.percent >= 0 ? green[400] : red[400]),\r\n                      }}\r\n                    >\r\n                      {!isLoading &&\r\n                        (item.percent >= 0 ? (\r\n                          <ArrowDropUp />\r\n                        ) : (\r\n                          <ArrowDropDown />\r\n                        ))}\r\n                      {item.percent}\r\n                    </Typography>\r\n                  )}\r\n                  {isSmallScreen && index < row.length - 1 && (\r\n                    <Divider variant=\"fullWidth\" />\r\n                  )}\r\n                </Grid>\r\n              );\r\n            })}\r\n          </Grid>\r\n        );\r\n      })}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MarketDetails;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Chart, {\r\n  CommonSeriesSettings,\r\n  Series,\r\n  Reduction,\r\n  ArgumentAxis,\r\n  Label,\r\n  Format,\r\n  ValueAxis,\r\n  Tooltip,\r\n  ZoomAndPan,\r\n  Legend,\r\n  LoadingIndicator,\r\n} from \"devextreme-react/chart\";\r\nimport \"devextreme/dist/css/dx.common.css\";\r\nimport \"devextreme/dist/css/dx.light.compact.css\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Grid,\r\n  IconButton,\r\n  LinearProgress,\r\n  makeStyles,\r\n  Typography,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport { ShowChart, ArrowDropDown, ArrowDropUp } from \"@material-ui/icons\";\r\nimport { red, green } from \"@material-ui/core/colors\";\r\n\r\nimport coinGecko from \"../API/coinGecko\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  chartChangeBtnChecked: {\r\n    color: theme.palette.info.light,\r\n  },\r\n  daysSelected: {\r\n    background: theme.palette.info.light,\r\n    \"&:hover\": {\r\n      background: theme.palette.info.light,\r\n    },\r\n  },\r\n  daysBtn: {\r\n    paddingLeft: \"0.1rem\",\r\n    paddingRight: \"0.1rem\",\r\n    minWidth: \"40px\",\r\n  },\r\n}));\r\n\r\nconst ChartComponent = ({ coin, currency, marketData }) => {\r\n  const [dataSource, setDataSource] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [line, setLine] = useState(false);\r\n  const [daysSelected, setDaysSelected] = useState([\r\n    true,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n  ]);\r\n\r\n  const theme = useTheme();\r\n  const classes = useStyle();\r\n  const formats = [\r\n    \"HH:mm\",\r\n    \"HH:mm\\nMMM dd\",\r\n    \"HH:mm\\nMMM dd\",\r\n    \"MMM dd, yyyy\",\r\n    \"MMM dd, yyyy\",\r\n    \"MMM dd, yyyy\",\r\n  ];\r\n  const currencyFormatter = new Intl.NumberFormat(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: currency,\r\n    maximumFractionDigits: 6,\r\n  });\r\n  const percentFormatter = new Intl.NumberFormat(undefined, {\r\n    maximumFractionDigits: 2,\r\n    style: \"percent\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    const days = [1, 7, 30, 180, 365, \"max\"];\r\n\r\n    const fetchData = async () => {\r\n      const data = await coinGecko.get(`/coins/${coin}/ohlc`, {\r\n        params: {\r\n          vs_currency: currency,\r\n          days: days[daysSelected.indexOf(true)],\r\n        },\r\n      });\r\n\r\n      const mappedData = data.data.map((value) => {\r\n        return {\r\n          date: new Date(value[0]),\r\n          o: value[1],\r\n          h: value[2],\r\n          l: value[3],\r\n          c: value[4],\r\n        };\r\n      });\r\n      setDataSource(mappedData);\r\n      setIsLoading(false);\r\n    };\r\n    fetchData();\r\n  }, [coin, currency, daysSelected]);\r\n\r\n  const customizeTooltip = (arg) => {\r\n    const text =\r\n      `<div><b>${arg.originalArgument.toLocaleString(undefined, {\r\n        dateStyle: \"medium\",\r\n        timeStyle: \"short\",\r\n        hourCycle: \"h23\",\r\n      })}</b><br/><br/>` +\r\n      (arg.openValue\r\n        ? `<b>Open:</b> ${currencyFormatter.format(arg.openValue)}<br/>\r\n<b>Close:</b> ${currencyFormatter.format(arg.closeValue)}<br/>\r\n<b>High:</b> ${currencyFormatter.format(arg.highValue)}<br/>\r\n<b>Low:</b> ${currencyFormatter.format(arg.lowValue)}</div>`\r\n        : `<b>Price:</b> ${currencyFormatter.format(arg.value)}</div>`);\r\n    return {\r\n      html: text,\r\n    };\r\n  };\r\n\r\n  const btnToggle = () => {\r\n    setLine(!line);\r\n  };\r\n\r\n  const changeDays = (index) => {\r\n    const res = daysSelected.map((value, i) => {\r\n      return i === index;\r\n    });\r\n    setDaysSelected(res);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {isLoading && <LinearProgress />}\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-between\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid item>\r\n          <Grid container direction=\"row\" spacing={2} alignItems=\"center\">\r\n            <Grid item>\r\n              <Avatar src={marketData && marketData.image.small} />\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography>\r\n                {marketData &&\r\n                  currencyFormatter.format(\r\n                    marketData.market_data.current_price[currency]\r\n                  )}\r\n              </Typography>\r\n              <Typography\r\n                style={{\r\n                  display: \"flex\",\r\n                  color:\r\n                    marketData &&\r\n                    (marketData.market_data.price_change_percentage_24h >= 0\r\n                      ? green[400]\r\n                      : red[400]),\r\n                }}\r\n              >\r\n                {marketData &&\r\n                  (marketData.market_data.price_change_percentage_24h >= 0 ? (\r\n                    <ArrowDropUp />\r\n                  ) : (\r\n                    <ArrowDropDown />\r\n                  ))}\r\n                {marketData &&\r\n                  percentFormatter.format(\r\n                    marketData.market_data.price_change_percentage_24h / 100\r\n                  )}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n          <IconButton\r\n            size=\"small\"\r\n            disableRipple\r\n            className={line ? classes.chartChangeBtnChecked : \"\"}\r\n            onClick={btnToggle}\r\n          >\r\n            <ShowChart />\r\n          </IconButton>\r\n        </Grid>\r\n      </Grid>\r\n      <Chart\r\n        id=\"chart\"\r\n        theme={`generic.${theme.palette.type}`}\r\n        title={marketData && marketData.name + \" Price\"}\r\n        dataSource={dataSource}\r\n      >\r\n        <LoadingIndicator show={isLoading} />\r\n        <CommonSeriesSettings\r\n          argumentField=\"date\"\r\n          type={line ? \"\" : \"candlestick\"}\r\n        />\r\n        <Series\r\n          name={marketData && marketData.name}\r\n          openValueField=\"o\"\r\n          highValueField=\"h\"\r\n          lowValueField=\"l\"\r\n          closeValueField=\"c\"\r\n          valueField=\"c\"\r\n        >\r\n          <Reduction color=\"red\" />\r\n        </Series>\r\n        <ArgumentAxis>\r\n          <Label format={formats[daysSelected.indexOf(true)]} />\r\n        </ArgumentAxis>\r\n        <ValueAxis position=\"left\">\r\n          <Label>\r\n            <Format\r\n              precision={\r\n                marketData &&\r\n                (marketData.market_data.current_price[currency] > 100 ? 0 : 2)\r\n              }\r\n              type=\"currency\"\r\n              currency={currency}\r\n            />\r\n          </Label>\r\n        </ValueAxis>\r\n        <Tooltip\r\n          enabled={true}\r\n          location=\"edge\"\r\n          customizeTooltip={customizeTooltip}\r\n        />\r\n        <Legend visible={false} />\r\n        <ZoomAndPan argumentAxis=\"both\" />\r\n      </Chart>\r\n      <br />\r\n      <Grid container spacing={1}>\r\n        {[\"1D\", \"7D\", \"1M\", \"6M\", \"1Y\", \"All\"].map((value, index) => {\r\n          return (\r\n            <Grid item key={index}>\r\n              <Button\r\n                className={`${classes.daysBtn}${\r\n                  daysSelected[index] ? \" \" + classes.daysSelected : \"\"\r\n                }`}\r\n                variant=\"outlined\"\r\n                key={index}\r\n                onClick={changeDays.bind(this, index)}\r\n              >\r\n                {value}\r\n              </Button>\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ChartComponent;\r\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://predictor-web.herokuapp.com\",\r\n});\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Skeleton, ToggleButton, ToggleButtonGroup } from \"@material-ui/lab\";\r\n\r\nimport predictor from \"../API/predictor\";\r\nimport {\r\n  Grid,\r\n  LinearProgress,\r\n  Tooltip,\r\n  Typography,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\n\r\nconst StyledLinearProgress = withStyles((theme) => ({\r\n  root: {\r\n    height: 20,\r\n    borderRadius: 3,\r\n  },\r\n  colorPrimary: {\r\n    backgroundColor: theme.palette.error.main,\r\n  },\r\n  bar: {\r\n    backgroundColor: theme.palette.success.main,\r\n  },\r\n}))(LinearProgress);\r\n\r\nconst percentFormatter = new Intl.NumberFormat(undefined, {\r\n  maximumFractionDigits: 2,\r\n  style: \"percent\",\r\n});\r\n\r\nconst Predictor = ({ id }) => {\r\n  const [m, setM] = useState({});\r\n  const [h, setH] = useState({});\r\n  const [mode, setMode] = useState(\"minutly\");\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setIsLoading(true);\r\n      const m = await predictor.get(\"/m/\" + id).then((result) => result.data);\r\n      const h = await predictor.get(\"/h/\" + id).then((result) => result.data);\r\n\r\n      setM(m);\r\n      setH(h);\r\n      setIsLoading(false);\r\n    };\r\n    fetchData();\r\n  }, [id]);\r\n\r\n  return isLoading ? (\r\n    <React.Fragment>\r\n      <Skeleton />\r\n      <Skeleton />\r\n      <Skeleton variant=\"rect\" height={30} />\r\n      <Skeleton />\r\n      <Skeleton />\r\n      <Skeleton variant=\"rect\" height={50} />\r\n    </React.Fragment>\r\n  ) : (\r\n    <Grid\r\n      container\r\n      justify=\"space-between\"\r\n      direction=\"column\"\r\n      style={{ height: \"100%\" }}\r\n    >\r\n      <Grid item>\r\n        <Typography\r\n          variant=\"h6\"\r\n          style={{ textAlign: \"center\", marginBottom: \"1.5rem\" }}\r\n        >\r\n          Price Prediction\r\n        </Typography>\r\n        <Grid container direction=\"row\" justify=\"space-between\">\r\n          <Grid item>\r\n            <Typography variant=\"caption\">Going Up</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"caption\">Going Down</Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <StyledLinearProgress\r\n        variant=\"determinate\"\r\n        value={\r\n          mode === \"minutly\"\r\n            ? m.nextPrediction.up * 100\r\n            : h.nextPrediction.up * 100\r\n        }\r\n      />\r\n      <Grid container direction=\"row\" justify=\"space-between\">\r\n        <Grid item>\r\n          <Typography variant=\"caption\">\r\n            {percentFormatter.format(\r\n              mode === \"minutly\" ? m.nextPrediction.up : h.nextPrediction.up\r\n            )}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography variant=\"caption\">\r\n            {percentFormatter.format(\r\n              mode === \"minutly\" ? m.nextPrediction.down : h.nextPrediction.down\r\n            )}\r\n          </Typography>\r\n        </Grid>\r\n        <Typography color=\"error\" variant=\"body2\">\r\n          Accuracy:{\" \"}\r\n          {percentFormatter.format(\r\n            mode === \"minutly\"\r\n              ? m.rightGuess / m.allGuess\r\n              : h.rightGuess / h.allGuess\r\n          )}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item style={{ alignSelf: \"center\" }}>\r\n        <ToggleButtonGroup\r\n          value={mode}\r\n          exclusive\r\n          onChange={(event, newMode) => setMode(newMode)}\r\n          style={{ width: \"100%\", marginTop: \"1.5rem\" }}\r\n        >\r\n          <ToggleButton value=\"minutly\">\r\n            <Tooltip title=\"varies from 1-10 minutes\">\r\n              <span>Minutly</span>\r\n            </Tooltip>\r\n          </ToggleButton>\r\n          <ToggleButton value=\"hourly\">\r\n            <Tooltip title=\"varies from 1-1.5 hours\">\r\n              <span>Hourly</span>\r\n            </Tooltip>\r\n          </ToggleButton>\r\n        </ToggleButtonGroup>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Predictor;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Grid, Card, CardContent, Container } from \"@material-ui/core\";\r\n\r\nimport coinGecko from \"../API/coinGecko\";\r\nimport MarketDetails from \"../components/MarketDetails\";\r\nimport ChartComponent from \"../components/ChartComponent\";\r\nimport { CoinListContext } from \"../context/CoinListContext\";\r\nimport Predictor from \"../components/Predictor\";\r\n\r\nconst Details = ({ match }) => {\r\n  const [marketData, setMarketData] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const { currency } = useContext(CoinListContext);\r\n\r\n  const coinId = match.params.coinId;\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setIsLoading(true);\r\n      const market = await coinGecko.get(`/coins/${coinId}`, {\r\n        params: {\r\n          localization: false,\r\n          tickers: false,\r\n          market_data: true,\r\n          community_data: false,\r\n          developer_data: false,\r\n          sparkline: false,\r\n        },\r\n      });\r\n\r\n      setMarketData(market.data);\r\n      setIsLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [coinId]);\r\n\r\n  return (\r\n    <Container>\r\n      <Grid container spacing={2} justify=\"center\" direction=\"row\">\r\n        <Grid item xs={12}>\r\n          <Card style={{ height: \"100%\", justifyItems: \"center\" }}>\r\n            <CardContent>\r\n              <ChartComponent\r\n                coin={coinId}\r\n                currency={currency}\r\n                marketData={marketData}\r\n              />\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item md={2} xs={12}>\r\n          <Card style={{ height: \"100%\", justifyItems: \"center\" }}>\r\n            <CardContent style={{ height: \"100%\" }}>\r\n              <Predictor id={coinId} />\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item md={10} xs={12}>\r\n          <Card style={{ height: \"100%\" }}>\r\n            <CardContent>\r\n              <MarketDetails\r\n                marketData={marketData}\r\n                currency={currency}\r\n                isLoading={isLoading}\r\n              />\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n","import {\r\n  AppBar,\r\n  Avatar,\r\n  fade,\r\n  FormControl,\r\n  IconButton,\r\n  InputBase,\r\n  List,\r\n  ListItem,\r\n  makeStyles,\r\n  MenuItem,\r\n  Paper,\r\n  Select,\r\n  Toolbar,\r\n  Typography,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport { Brightness4, BrightnessHigh, Search } from \"@material-ui/icons\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport coinGecko from \"../API/coinGecko\";\r\nimport { CoinListContext } from \"../context/CoinListContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(1),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 1),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(3)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n      width: \"8ch\",\r\n      \"&:focus\": {\r\n        width: \"15ch\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst CustomAppBar = ({ themeType, setThemeType }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const theme = useTheme();\r\n  const { search, currency, setCurrency } = useContext(CoinListContext);\r\n\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [openResult, setOpenResult] = useState(false);\r\n  const [searchBoxValue, setSearchBoxValue] = useState(\"\");\r\n  const [currencyList, setCurrencyList] = useState([currency]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const data = await coinGecko.get(\"/simple/supported_vs_currencies\");\r\n\r\n      setCurrencyList(data.data);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const changeTheme = (event) => {\r\n    const type = themeType === \"dark\" ? \"light\" : \"dark\";\r\n    window.localStorage.setItem(\"theme\", type);\r\n    setThemeType(type);\r\n  };\r\n\r\n  const searchHandler = (event) => {\r\n    const prefix = event.target.value;\r\n    setSearchBoxValue(prefix);\r\n\r\n    const results = search(prefix);\r\n\r\n    if (prefix.length < 2 || results.length === 0) {\r\n      setOpenResult(false);\r\n      setSearchResults([]);\r\n      return;\r\n    }\r\n\r\n    setSearchResults(results.slice(0, 10));\r\n    setOpenResult(true);\r\n  };\r\n\r\n  const handleCurrencyChange = (event) => {\r\n    setCurrency(event.target.value.toLowerCase());\r\n  };\r\n\r\n  return (\r\n    <AppBar\r\n      color=\"default\"\r\n      position=\"sticky\"\r\n      style={{ marginBottom: theme.spacing(1) }}\r\n    >\r\n      <Toolbar>\r\n        <Typography\r\n          style={{\r\n            flexGrow: 1,\r\n            cursor: \"pointer\",\r\n          }}\r\n          onClick={() => history.push(\"/coin-watch\")}\r\n        >\r\n          Coin Watch\r\n        </Typography>\r\n        <div className={classes.search}>\r\n          <div className={classes.searchIcon}>\r\n            <Search />\r\n          </div>\r\n          <InputBase\r\n            placeholder=\"Search…\"\r\n            classes={{\r\n              root: classes.inputRoot,\r\n              input: classes.inputInput,\r\n            }}\r\n            inputProps={{ \"aria-label\": \"search\" }}\r\n            onChange={searchHandler}\r\n            value={searchBoxValue}\r\n          />\r\n          <pre\r\n            style={{\r\n              position: \"absolute\",\r\n              width: \"100%\",\r\n              display: openResult ? \"block\" : \"none\",\r\n            }}\r\n          >\r\n            <Paper elevation={3}>\r\n              <List>\r\n                {searchResults.map((value, index) => {\r\n                  return (\r\n                    <ListItem\r\n                      key={index}\r\n                      style={{\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                      onClick={() => {\r\n                        history.push(`/coin-watch/${value.id}`);\r\n                        setOpenResult(false);\r\n                        setSearchBoxValue(\"\");\r\n                      }}\r\n                    >\r\n                      <Avatar\r\n                        //src={value.image}\r\n                        style={{\r\n                          marginRight: theme.spacing(1),\r\n                          fontSize: theme.spacing(2),\r\n                        }}\r\n                      >\r\n                        {value.symbol}\r\n                      </Avatar>\r\n                      <Typography variant=\"caption\" noWrap>\r\n                        {value.name}\r\n                      </Typography>\r\n                    </ListItem>\r\n                  );\r\n                })}\r\n              </List>\r\n            </Paper>\r\n          </pre>\r\n        </div>\r\n        <FormControl>\r\n          <Select\r\n            value={currency.toUpperCase()}\r\n            onChange={handleCurrencyChange}\r\n            className={classes.selectEmpty}\r\n            inputProps={{ \"aria-label\": \"Without label\" }}\r\n          >\r\n            {currencyList.map((value, index) => {\r\n              if (value.length > 3) return null;\r\n              const capsValue = value.toUpperCase();\r\n              return (\r\n                <MenuItem key={index} value={capsValue}>\r\n                  {capsValue}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n        </FormControl>\r\n        <IconButton onClick={changeTheme}>\r\n          {themeType !== \"dark\" ? <Brightness4 /> : <BrightnessHigh />}\r\n        </IconButton>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default CustomAppBar;\r\n","import React, { useState } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { createMuiTheme, ThemeProvider, CssBaseline } from \"@material-ui/core\";\n\nimport CoinList from \"./pages/CoinList\";\nimport Details from \"./pages/Details\";\nimport CustomAppBar from \"./components/CustomAppBar\";\n\nfunction App() {\n  const [themeType, setThemeType] = useState(\n    window.localStorage.getItem(\"theme\") || \"dark\"\n  );\n\n  const theme = createMuiTheme({\n    palette: {\n      type: themeType,\n    },\n  });\n\n  return (\n    <React.Fragment>\n      <ThemeProvider theme={theme}>\n        <BrowserRouter>\n          <CustomAppBar themeType={themeType} setThemeType={setThemeType} />\n          <CssBaseline />\n          <Switch>\n            <Route exact path=\"/coin-watch\" component={CoinList} />\n            <Route path=\"/coin-watch/:coinId\" component={Details} />\n          </Switch>\n        </BrowserRouter>\n      </ThemeProvider>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport CoinListProvider from \"./context/CoinListContext\";\n\nReactDOM.render(\n  <CoinListProvider>\n    <App />\n  </CoinListProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}